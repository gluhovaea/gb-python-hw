"""
3.Задание: Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для данного задания примем,
что пользователь может вводить только числа и строки. При вводе пользователем очередного элемента необходимо
реализовать проверку типа элемента и вносить его в список, только если введено число. Класс-исключение должен не
позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class NoNumberListException(Exception):
    pass


def add_number(number_list: list):
    value = input("Введите число и нажмите Enter >>> ")

    try:
        number_list.append(float(value))
    except ValueError:
        raise NoNumberListException(f"Вы ввели '{value}' вместо числа. Недопустимое значение, попробуйте еще")


numbers = []

while True:
    try:
        add_number(numbers)
    except NoNumberListException as exception:
        print(exception)
    except KeyboardInterrupt:
        print(f"\nВаш список чисел = {numbers}")
        break

#  результате получилось:
# Введите число и нажмите Enter >>> 12
# Введите число и нажмите Enter >>> 15
# Введите число и нажмите Enter >>> 27
# Введите число и нажмите Enter >>> hjkl
# Вы ввели 'hjkl' вместо числа. Недопустимое значение, попробуйте еще
# Введите число и нажмите Enter >>> 10
# Введите число и нажмите Enter >>> 17
# Введите число и нажмите Enter >>> 56
# Введите число и нажмите Enter >>>    # тут нажимаем на кнопку Стоп
# Ваш список чисел = [12.0, 15.0, 27.0, 10.0, 17.0, 56.0]
